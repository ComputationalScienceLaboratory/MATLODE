% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%                                                                  
% Main Program File                                                
%                                                                  
% Generated by KPP-2.2.3 symbolic chemistry Kinetics PreProcessor  
%       (http://www.cs.vt.edu/~asandu/Software/KPP)                
% KPP is distributed under GPL, the general public licence         
%       (http://www.gnu.org/copyleft/gpl.html)                     
% (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa           
% (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech            
%     With important contributions from:                           
%        M. Damian, Villanova University, USA                      
%        R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
%                                                                  
% File                 : cbm_Main.m                                
% Time                 : Fri Mar 15 14:06:05 2013                  
% Working directory    : /home/sandu/kpp-2.2.3/examples/Cbm_matlab 
% Equation file        : cbm.kpp                                   
% Output root filename : cbm                                       
%                                                                  
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




  cbm_Parameters;
  cbm_Global_defs;
  cbm_Sparse;
  cbm_Monitor;
  cbm_JacobianSP;
  cbm_HessianSP;
  cbm_StoichiomSP;

% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%                                                                  
% MAIN - Main program - driver routine                             
%   Arguments :                                                    
%                                                                  
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


  TSTART = 12*3600;
  TEND = TSTART + 7*24*3600;
  DT = 60.;
  TEMP = 298;

  RTOLS = 1.0e-3; 
  ATOLS = 1.0e+3;
     
  cbm_Initialize;
  
  Options = odeset('AbsTol',ATOLS,'RelTol',RTOLS,'Jacobian',@cbm_Jac_Chem);
  Options_MATLODE = MATLODE_OPTIONS('AbsTol',ATOLS,'RelTol',RTOLS,'Jacobian',@cbm_Jac_Chem);

% ********** TIME LOOP *************************

  C(1:32) = VAR(1:32); 
  C((32+1):33) = FIX(1:1);
  
%  cbm_InitializeSaveData;

%  disp(['Done[%] Time[h] ',SPC_NAMES(MONITOR(1:NMONITOR))])

  TIME = TSTART;
  
  Tspan = linspace( TSTART, TEND, 100 );

  [T, Y] = ode15s(@cbm_Fun_Chem, Tspan, VAR, Options);
  [T_MATLODE, Y_MATLODE] = MATLODE_SDIRK_FWD_Integrator(@cbm_Fun_Chem,Tspan,VAR,Options_MATLODE);
  
  %y = ROK4NA(VAR, .1, Tspan, @cbm_Fun_Chem, @cbm_Jac_Chem, 4)

  VAR(1:32) = Y(length(T),1:32)';
  Y = [Y, ones(length(T),1)*FIX(:)'];
  
  VAR(1:32) = Y_MATLODE(length(T_MATLODE),1:32)';
  Y_MATLODE = [Y_MATLODE, ones(length(T_MATLODE),1)*FIX(:)'];  
  
  C(1:32) = VAR(1:32); 
  C((NVAR+1):NSPEC) = FIX(1:NFIX);
	
  fprintf('done %6.1f,  %7.2h hours', (TIME-TSTART)/(TEND-TSTART), TIME/3600.);
  disp( Y(:,MONITOR(1:NMONITOR))/CFACTOR );
  
  fprintf('done %6.1f,  %7.2h hours', (TIME-TSTART)/(TEND-TSTART), TIME/3600.);
  disp( Y_MATLODE(:,MONITOR(1:NMONITOR))/CFACTOR );
  
  for i = 1:NMONITOR
    figure; plot( (T)/3600, Y(:,MONITOR(i))/CFACTOR );
    title( SPC_NAMES( MONITOR(i),:) ,'FontSize',12); 
    set(gca,'XLim',[TSTART,TEND]/3600,'FontSize',12);
    xlabel('Time [ h ]','FontSize',12);
    ylabel('Concentration','FontSize',12);
    
    figure; plot( (T_MATLODE)/3600, Y_MATLODE(:,MONITOR(i))/CFACTOR );
    title( SPC_NAMES( MONITOR(i),:) ,'FontSize',12); 
    set(gca,'XLim',[TSTART,TEND]/3600,'FontSize',12);
    xlabel('Time [ h ]','FontSize',12);
    ylabel('Concentration','FontSize',12);    
  end  

%   cbm_FUNC_SaveData;
%   cbm_FUNC_CloseSaveData;

return 
